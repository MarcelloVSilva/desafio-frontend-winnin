{"version":3,"sources":["reddit/subReddits.js","reddit/config.js","providers/Provider.js","components/item/Item.js","components/item/styles.js","components/carregando/Carregando.js","components/semResultado/SemResultado.js","components/itens/Itens.js","components/conteudo/Conteudo.js","components/App.js","serviceWorker.js","index.js"],"names":["getHot","reddit","Promise","resolve","reject","getSubreddit","fetch","get_hot","then","hot","err","getNew","get_new","news","getRising","get_rising","rising","catch","redditInterface","snoowrap","userAgent","clientId","clientSecret","username","password","Context","React","createContext","HOT","Provider","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeTab","abaAtiva","setState","window","scroll","state","inherits","createClass","key","value","_componentWillMount","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","stop","apply","arguments","react_default","createElement","children","Component","rootUrl","count","Item","self","setTimeout","_reactInternalFiber","child","stateNode","style","opacity","className","classes","wrapper","Paper_default","root","elevation","thumb","thumbnail","Avatar_default","concat","customSizeAvatar","src","Typography_default","variant","component","titulo","onClick","open","tituloUri","autor","name","autorName","dominio","indexOf","withStyles","theme","objectSpread","mixins","gutters","paddingTop","spacing","unit","paddingBottom","marginTop","width","transition","&:hover","backgroundColor","display","alignItens","justifyContent","flexDirection","&>div","marginRight","background","height","cursor","all","color","textDecoration","dataCriacao","Carregando","SemResultado","id","Itens","Consumer","context","length","components_semResultado_SemResultado","map","item","item_Item","title","comments","_uri","timestampCriacao","created","author","domain","components_carregando_Carregando","Conteudo","components_itens_Itens","react","conteudoAtivo","App","renderTab","conteudo_Conteudo","Boolean","location","hostname","match","ReactDOM","render","Provider_Provider","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc138d24.chunk.js","sourcesContent":["export const getHot = (reddit) => new Promise((resolve, reject) => {\n    reddit.getSubreddit('reactjs').fetch()\n        .get_hot()\n        .then(hot => resolve(hot))\n        .then(err => reject(err));\n})\n\nexport const getNew = (reddit) => new Promise((resolve, reject) => {\n    reddit.getSubreddit('reactjs').fetch()\n        .get_new()\n        .then(news => resolve(news))\n        .then(err => reject(err));\n})\n\nexport const getRising = (reddit) => new Promise((resolve, reject) => {\n    reddit.getSubreddit('reactjs').fetch()\n        .get_rising()\n        .then(rising => resolve(rising))\n        .catch(err => reject(err));\n})","import snoowrap from 'snoowrap';\n\nconst redditInterface = () => new Promise((resolve, reject) => {\n    const reddit = new snoowrap({\n        userAgent: 'winnin',\n        clientId: 'sbpY3HgVOCGXEQ',\n        clientSecret: '3HDlt0u0Z4GnPOYI1bZZ-az-p88',\n        username: 'testebrdev',\n        password: 'admin.teste'\n    })\n    resolve(reddit)\n})\n\nexport default redditInterface","import React, { Component } from 'react'\nimport { getHot, getNew, getRising } from '../reddit/subReddits'\nimport redditInterface from '../reddit/config'\n\nexport const Context = React.createContext();\n\nexport const HOT = 1\nexport const NEW = 2\nexport const RISING = 3\n\nexport class Provider extends Component {\n    constructor(props) {\n        super(props)\n        this.changeTab = (abaAtiva) => {\n            this.setState({ abaAtiva })\n            window.scroll(0, 0)\n        }\n        this.state = {\n            reddit: null,\n            hot: null,\n            news: null,\n            rising: null,\n            abaAtiva: HOT,\n            changeTab: this.changeTab\n        }\n    }\n    async componentWillMount() {\n        const reddit = await redditInterface()\n        this.setState({ reddit })\n\n        const hot = await getHot(reddit)\n        this.setState({ hot })\n\n        const news = await getNew(reddit)\n        this.setState({ news })\n\n        const rising = await getRising(reddit)\n        this.setState({ rising })\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport { styles } from './styles';\n\nconst rootUrl = 'https://reddit.com/'\n\nlet count = 1\nclass Item extends React.Component {\n    componentDidMount() {\n        const self = this\n        setTimeout(() => {\n            self._reactInternalFiber.child.stateNode.style.opacity = 1\n        }, 100 * count++)\n    }\n    componentWillUnmount() {\n        count = 0\n    }\n    render() {\n        return (\n            <div className={this.props.classes.wrapper}>\n                <Paper className={this.props.classes.root} elevation={1}>\n                    <div className={this.props.classes.thumb}>\n                        {this.props.thumbnail === 'self' ?\n                            <Avatar className={`${this.props.classes.self} ${this.props.classes.customSizeAvatar}`} /> :\n                            <Avatar className={this.props.classes.customSizeAvatar} src={this.props.thumbnail} />\n                        }\n                    </div>\n                    <div>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            <div\n                                className={this.props.classes.titulo}\n                                onClick={() => window.open(`${rootUrl}${this.props.tituloUri}`)}>\n                                {this.props.titulo}\n                            </div>\n                        </Typography>\n                        <Typography component=\"div\">\n                            {'Enviado '}\n                            {' por '}\n                            <button\n                                onClick={() => window.open(`${rootUrl}user/${this.props.autor.name}`)}\n                                className={this.props.classes.autorName}>\n                                <b>{this.props.autor.name}</b>\n                            </button>\n                        </Typography>\n                        <Typography component=\"div\">\n                            <button\n                                onClick={() => {\n                                    this.props.dominio.indexOf('self') > -1 ?\n                                        window.open(`${rootUrl}r/reactjs`) :\n                                        window.open(`${rootUrl}domain/${this.props.dominio}`)\n                                }}\n                                className={this.props.classes.dominio}>\n                                {this.props.dominio}\n                            </button>\n                        </Typography>\n                    </div>\n                </Paper>\n            </div>\n        );\n    }\n}\n\n// <div className={classes.dataCriacao}>{queHorasEnviou(timestampCriacao)}</div>                \n// const queHorasEnviou = (ts) => {\n//     const days = parseInt(ts / (1000 * 60 * 60 * 24 * 1000))\n//     return days === 0 ? 'Hoje' :\n//         days === 1 ? 'Ontem' : `a ${days} dias`\n// }\n\nItem.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Item);","export const styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n        marginTop: '1em',\n        width: '65%',\n        transition: 'background-color 0.3s ease',\n        '&:hover': {\n            backgroundColor:'#029c9659'\n        }\n    },\n    wrapper: {\n        display: 'flex',\n        alignItens: 'center',\n        justifyContent: 'center',\n        flexDirection: 'row',\n        opacity: 0,\n        transition: 'opacity 1s',\n        '&>div': {\n            display: 'flex',\n            alignItens: 'center',\n        }\n    },\n    thumb: {\n        marginRight: '1vmin'\n    },\n    self: {\n        background: 'url(//b.thumbs.redditmedia.com/XWINAyK1fHqmkcRwoZGwsASV7l6fl_cRG_5u_o9Dwqk.png) -73px -75px',\n    },\n    customSizeAvatar: {\n        backgroundColor: '#d2dbe0',\n        width: '64px',\n        height: '64px',\n    },\n    titulo: {\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n    autorName: {\n        all: 'unset',\n        color: '#029c96',\n        '&:hover': {\n            cursor: 'pointer',\n            textDecoration: 'underline'\n        }\n    },\n    dataCriacao: {\n        all: 'unset'\n    },\n    dominio: {\n        all: 'unset',\n        color: '#676767',\n        '&:hover': {\n            cursor: 'pointer',\n            textDecoration: 'underline'\n        }\n    }\n});","import React from 'react'\nimport './Carregando.css'\n\nclass Carregando extends React.Component {\n    render() {\n        return (\n            <div className=\"spinner\">\n                <div className=\"dot1\"></div>\n                <div className=\"dot2\"></div>\n            </div>\n        )\n    }\n}\n\nexport default Carregando","import React from 'react'\nimport './SemResultado.css'\n\nclass SemResultado extends React.Component {\n    render() {\n        return (\n            <p id=\"noresults\" className=\"error\"/>\n        )\n    }\n}\n\nexport default SemResultado","import React from 'react';\nimport { Context } from '../../providers/Provider';\nimport Item from \"../item/Item\";\nimport './Itens.css'\nimport Carregando from '../carregando/Carregando';\nimport SemResultado from '../semResultado/SemResultado';\n\nclass Itens extends React.Component {\n    render() {\n        return (<Context.Consumer>\n            {(context) => (\n                <div id=\"conteudo\">\n                    {!context[this.props.abaAtiva] ?\n                        <Carregando /> :\n                        context[this.props.abaAtiva].length === 0 ?\n                            <SemResultado /> :\n                            context[this.props.abaAtiva].map((item) => {\n                                return <Item\n                                    key={item.id}\n                                    thumbnail={item.thumbnail}\n                                    titulo={item.title}\n                                    tituloUri={item.comments._uri}\n                                    timestampCriacao={item.created}\n                                    autor={{...item.author}}\n                                    dominio={item.domain} />;\n                            })}\n                </div>\n            )}\n        </Context.Consumer>);\n    }\n}\n\nexport default Itens;","import React, { Component, Fragment } from 'react';\nimport { Context, HOT, NEW, RISING } from '../../providers/Provider'\nimport Itens from '../itens/Itens';\nimport Carregando from '../carregando/Carregando';\n\nclass Conteudo extends Component {\n    conteudoAtivo(context) {\n        switch (context.abaAtiva) {\n            case HOT:\n                return (<Itens abaAtiva=\"hot\" />)\n            case NEW:\n                return (<Itens abaAtiva=\"news\" />)\n            case RISING:\n                return (<Itens abaAtiva=\"rising\" />)\n            default:\n                return (<Carregando />)\n        }\n    }\n\n    render() {\n        return (\n            <Context.Consumer>\n                {(context) => (\n                    <Fragment>{this.conteudoAtivo(context)}</Fragment>\n                )}\n            </Context.Consumer>\n        );\n    }\n}\n\nexport default Conteudo;","import React, { Component, Fragment } from 'react';\nimport { Context, HOT, NEW, RISING } from '../providers/Provider'\nimport Conteudo from './conteudo/Conteudo';\nimport './App.css'\nimport Carregando from './carregando/Carregando';\n\nclass App extends Component {\n  renderTab(context) {\n    return (\n      <div id=\"tabs\">\n        <button className={`tabBtn ${context.abaAtiva === HOT && 'active'}`} onClick={() => context.changeTab(HOT)}>Hot</button>\n        <button className={`tabBtn ${context.abaAtiva === NEW && 'active'}`} onClick={() => context.changeTab(NEW)}>News</button>\n        <button className={`tabBtn ${context.abaAtiva === RISING && 'active'}`} onClick={() => context.changeTab(RISING)}>Rising</button>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Context.Consumer>\n        {(context) => (\n          <Fragment>\n            <div id=\"topo\">\n              <div id='tituloDaPagina'>ReactJs</div>\n              {!context.reddit ? <Carregando /> : <div>{this.renderTab(context)}</div>}\n            </div>\n            {!context.reddit ? <Carregando /> : <Conteudo />}\n          </Fragment>\n        )}\n      </Context.Consumer>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from './providers/Provider';\n\nReactDOM.render(\n    <Provider>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}